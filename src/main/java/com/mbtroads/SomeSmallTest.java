package com.mbtroads;

import org.graphwalker.core.machine.ExecutionContext;
import org.junit.Assert;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;


/**
 * Implements the GraphWalker model: src/main/resources/TrafficLightModel.json
 * <p/>
 * The interface SmallTest, that SomeSmallTest implements, is generated by
 * running: mvn graphwalker:generate-sources
 * also: mvn compile
 */
public class SomeSmallTest extends ExecutionContext implements TrafficLightModel {
    TrafficLight trafficLight = null;

    String actualTitle = "";

    private  static WebDriver driver;

    @Override
    public void e_Toggle() {
        System.out.println("Running: e_Toggle");
        driver.get("http://localhost:3002");
        trafficLight.toggleLight();

    }

    @Override
    public void e_TurnGreen() {
        System.out.println("Running: e_TurnGreen");
        actualTitle = driver.getTitle();
        trafficLight.setColor(TrafficLight.Color.GREEN);
    }

    @Override
    public void v_Start() {
        System.out.println("Running: v_Start");
        System.setProperty("webdriver.chrome.driver", "D:\\chromedriver.exe");
        driver = new ChromeDriver();
        driver.manage().window().maximize();
        trafficLight = new TrafficLight();
        assert (trafficLight.getCurColor() == TrafficLight.Color.GREEN);
    }

    @Override
    public void v_Red() {
        System.out.println("Running: v_Red");
        assert (trafficLight.getCurColor() == TrafficLight.Color.RED);
    }

    @Override
    public void v_Green() {
        System.out.println("Running: v_Green");
        assert (trafficLight.getCurColor() == TrafficLight.Color.GREEN);
        System.out.println("V ####################1  Home Page");
    }
}